import React, { useState, useEffect } from "react";
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Input } from "@/components/ui/input";

export default function App() {
  const [input, setInput] = useState("");
  const [flashcards, setFlashcards] = useState([]);
  const [currentCard, setCurrentCard] = useState(0);
  const [userAnswer, setUserAnswer] = useState("");
  const [feedback, setFeedback] = useState("");
  const [quizStarted, setQuizStarted] = useState(false);
  const [score, setScore] = useState(0);

  const parseInput = (text) => {
    const lines = text.split("\n");
    return lines
      .filter((line) => line.includes("|"))
      .map((line) => {
        const [question, answer] = line.split("|").map((s) => s.trim());
        return { question, answer };
      });
  };

  const startQuiz = () => {
    const parsed = parseInput(input);
    if (parsed.length > 0) {
      setFlashcards(parsed);
      setQuizStarted(true);
      setCurrentCard(0);
      setScore(0);
    } else {
      alert("Please enter valid flashcards in the format: Q | A");
    }
  };

  const checkAnswer = () => {
    const isCorrect = userAnswer.toLowerCase() === flashcards[currentCard].answer.toLowerCase();
    setFeedback(isCorrect ? "Correct!" : "Try Again");
    if (isCorrect) setScore(score + 1);
  };

  const nextCard = () => {
    if (currentCard < flashcards.length - 1) {
      setCurrentCard(currentCard + 1);
      setUserAnswer("");
      setFeedback("");
    }
  };

  const prevCard = () => {
    if (currentCard > 0) {
      setCurrentCard(currentCard - 1);
      setUserAnswer("");
      setFeedback("");
    }
  };

  useEffect(() => {
    setUserAnswer("");
    setFeedback("");
  }, [currentCard]);

  return (
    <div className="min-h-screen bg-gray-100 p-4 sm:p-6">
      <Card className="max-w-md mx-auto">
        <CardHeader>
          <CardTitle className="text-2xl font-bold text-center">
            Flashcard Learning Tool
          </CardTitle>
        </CardHeader>
        <CardContent>
          {!quizStarted ? (
            <>
              <Textarea
                placeholder="Enter flashcards (Q | A format)"
                value={input}
                onChange={(e) => setInput(e.target.value)}
                className="w-full h-40 mb-4"
              />
              <Button onClick={startQuiz} className="w-full">
                Start Quiz
              </Button>
            </>
          ) : (
            <>
              <div className="text-center mb-4">
                Card {currentCard + 1} of {flashcards.length}
              </div>
              <Card className="mb-4">
                <CardContent className="p-4">
                  <p className="font-semibold">{flashcards[currentCard].question}</p>
                </CardContent>
              </Card>
              <Input
                type="text"
                placeholder="Your answer"
                value={userAnswer}
                onChange={(e) => setUserAnswer(e.target.value)}
                className="w-full mb-4"
              />
              <Button onClick={checkAnswer} className="w-full mb-2">
                Check Answer
              </Button>
              {feedback && (
                <p className={`text-center ${feedback === "Correct!" ? "text-green-600" : "text-red-600"}`}>
                  {feedback}
                </p>
              )}
            </>
          )}
        </CardContent>
        {quizStarted && (
          <CardFooter className="flex justify-between">
            <Button onClick={prevCard} disabled={currentCard === 0}>
              Previous
            </Button>
            <Button onClick={nextCard} disabled={currentCard === flashcards.length - 1}>
              Next
            </Button>
          </CardFooter>
        )}
      </Card>
      {quizStarted && currentCard === flashcards.length - 1 && (
        <Card className="max-w-md mx-auto mt-4">
          <CardContent className="p-4">
            <h2 className="text-xl font-semibold mb-2">Score Summary</h2>
            <p>
              Correct Attempts: {score} / {flashcards.length}
            </p>
          </CardContent>
        </Card>
      )}
    </div>
  );
}